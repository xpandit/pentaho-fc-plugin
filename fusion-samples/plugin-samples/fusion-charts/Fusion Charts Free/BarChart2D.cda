<?xml version="1.0" encoding="utf-8"?>
<CDADescriptor>
    <DataSources>
        <Connection id="1" type="sql.jndi">
            <Jndi>SampleData</Jndi>
        </Connection>
        <Connection id="2" type="mondrian.jndi">
			<Catalog>mondrian:/SteelWheels</Catalog>
         	<Jndi>SampleData</Jndi>
        </Connection>
    </DataSources>

    <!-- DataAccess object controls the query itself

	Access controls if the datasource can be seen from the outside or is to
	be used from a Compound datasource only

	-->
    <DataAccess id="1" connection="1" type="sql" access="public" cache="true" cacheDuration="5">
		<Name>Sql Query on SampleData</Name>
        <Query>
			select o.YEAR_ID, o.STATUS, sum(o.TOTALPRICE) as price from orderfact o
			where o.STATUS = ${status} and o.ORDERDATE &gt; ${orderDate}
			group by o.YEAR_ID, o.STATUS
		</Query>
        <!-- All parameters are passed as string from the outside. Their
		type is defined here. If needed, a conversion pattern must be specified

		Supported types: String, Date, Integer, Numeric
		-->
        <Parameters>
            <Parameter name="status" type="String" default="Shipped"/>
            <Parameter name="orderDate" type="Date" pattern="yyyy-MM-dd" default="2003-03-01"/>
        </Parameters>
        <!-- 
		Columns block allow specifying name and CalculatedColumn the creation of new
		columns based on formulas
		-->
		<Columns>
			<Column idx="0">
				<Name>Year</Name>
			</Column>
			<CalculatedColumn>
				<Name>PriceInK</Name>
				<Formula>=[PRICE]/1000000</Formula>
			</CalculatedColumn>
		</Columns>
        <!-- Settings block here overrides defaults and general settings -->
        <Settings>
            <Export type="csv" includeTotals="true">
                <Column idx="0" aggregator="None"/>
                <Column idx="1" aggregator="Average"/>
            </Export>
        </Settings>
        <!-- Output controls what is outputed and by what order. Defaults to everything -->
        <Output indexes="1,0,2,3"/>
    </DataAccess>
    <DataAccess id="2" connection="2" type="mdx" access="public">
        <Query>
			select {[Measures].[Sales]} ON COLUMNS,
			NON EMPTY  [Time].[Years].Members ON ROWS
			from [SteelWheelsSales]
		</Query>
		<Output id="2" indexes="1,2"/>
		<Output id="3" indexes="0,2"/>
    </DataAccess>
    <!-- CompoundDataAccess can be used to join queries. Some types are
	supported, and the user is responsible for assuring the different dataaccess
	are compatible:

	* Union: Appends different sources
	* Join: Joins 2 resultsets based on one or more keys. Results have to be 
	sorted by those keys.

	-->
    <!--CompoundDataAccess id="3" type="union">
		<Source id="1"/>
		<Source id="2"/>
    </CompoundDataAccess>
    <CompoundDataAccess id="4" type="join">
		<Left keys="0"/>
		<Right keys="0"/>
        <Output indexes="0,2,3"/>
    </CompoundDataAccess-->
</CDADescriptor>